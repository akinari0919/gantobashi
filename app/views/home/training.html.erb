<main>
  <div class="create-contents">
    <div class="camera">
      <div class="camera-bd"></div>
      <video id="video" autoplay playsinline width="300" height="300"></video>
      <canvas id="canvas" width="300" height="300"></canvas>
    </div>  
    <div class="submit-btn"></div>
    <div class="comment">
      <p id="result"　class="mt-3">コツは“下から睨む”です。</p>
      <p id="label-container" class="mt-3"></p>
    </div>
    <p class="advise" id="advise">☆を全て塗りつぶそう！</p>
    <div class="btn-2">
      <p class="button-40" id="shatter" onclick="init()">訓練開始</p>
      <p class="button-40" id="retry" onclick="init()">もう一度</p>
      <p class="button-40" id="twitter" onclick="twitter()">
        つぶやく
      </p>
    </div>
  </div>
  

<script>
  $('#canvas').hide();
  $('#dummy').hide();
  $('#advise').hide();
  $('#retry').hide();
  $('#detail').hide();
  $('#twitter').hide();
  // カメラ設定
  const constraints = {
    video: {
      width: 300,
      height: 300,
      facingMode: "user"   // フロントカメラを利用する
    }
  };

  // カメラを<video>と同期
  navigator.mediaDevices.getUserMedia(constraints)
  .then( (stream) => {
    video.srcObject = stream;
    video.onloadedmetadata = (e) => {
      video.play();
    };
  })
  .catch( (err) => {
    console.log(err.name + ": " + err.message);
    window.location.href = "/select";
  });

  const URL = "https://teachablemachine.withgoogle.com/models/3tSiNOSPs/";

  let model, labelContainer, maxPredictions;

  async function init() {
    document.getElementById('shatter').disabled = true;
    $('#canvas').hide();
    $('#video').show();
    $('#retry').hide();
    $('#shatter').hide();
    $('#result').hide();
    $('#result').empty();
    $('#label-container').html("まもなく開始されます。");
    $('#label-container').show();
    $('#advise').show();
    $('#twitter').hide();
    $(this).html( $(this).data('loading-text') );

    // teachablemachineのモデルURLを読み込む
    const modelURL = URL + "model.json";
    const metadataURL = URL + "metadata.json";

    // モデルのイメージを格納する
    model = await tmImage.load(modelURL, metadataURL);
    maxPredictions = model.getTotalClasses();

    // 結果を出す為のlavelcontainerをDOMに要素追加する
    labelContainer = document.getElementById("label-container");
    window.requestAnimationFrame(loop);
  }

  async function loop() {
    // canvasに静止画を入れる
    var canvas = document.getElementById("canvas")
    canvas.getContext("2d").drawImage(video, 0, 0, 300, 300)

    //予測は、画像、ビデオ、またはキャンバスのhtml要素を取り込むことができます
    const prediction = await model.predict(canvas);

    if (prediction[0].probability * 100 > 0){
      labelContainer.innerHTML = "・・・・・";
    }

    if (prediction[0].probability * 100 > 10){
      labelContainer.innerHTML = "☆・・・・";
    }

    if (prediction[0].probability * 100 > 20){
      labelContainer.innerHTML = "☆☆・・・";
    }

    if (prediction[0].probability * 100 > 30){
      labelContainer.innerHTML = "☆☆☆・・";
    }

    if (prediction[0].probability * 100 > 50){
      labelContainer.innerHTML = "☆☆☆☆・";
    }

    if (prediction[0].probability * 100 > 65){
      labelContainer.innerHTML = "☆☆☆☆☆";
    }

    if (prediction[0].probability * 100 > 75){
      labelContainer.innerHTML = "★☆☆☆☆";
    }

    if (prediction[0].probability * 100 > 97.5){
      labelContainer.innerHTML = "★★☆☆☆";
    }

    if (prediction[0].probability * 100 > 98.5){
      labelContainer.innerHTML = "★★★☆☆";
    }

    if (prediction[0].probability * 100 > 99.8){
      labelContainer.innerHTML = "★★★★☆";
    }

    if (prediction[0].probability * 100 === 99.9999){
      labelContainer.innerHTML = "★★★★★";
      // canvasに静止画を入れる
      var canvas = document.getElementById("canvas")
      canvas.getContext("2d").drawImage(video, 0, 0, 300, 300)
      $('#video').hide();
      $('#canvas').show();
      $('#label-container').hide();
      $('#advise').hide();
      $('#result').show();
      $('#retry').show();
      $('#twitter').show();

      const base64 = canvas.toDataURL('image/jpeg').replace(/data:.*\/.*;base64,/, '');
      // alert(base64);

      $.ajax({
        url: '/judge',
        type: 'POST',
        data: {
            image: base64,
          },
        headers: {
            'X-CSRF-Token' : $('meta[name="csrf-token"]').attr('content')
          },
        success: function(data) {
            $('#result').html(data.body)
          },
        error: function() {
            $('#result').html('解析失敗m(_ _)m')
          }
      });

      window.cancelAnimationFrame();
    }

    //処理を継続させるためloopをさせる
    window.requestAnimationFrame(loop);
  }

  function twitter() {
    window.open('https://twitter.com/intent/tweet?text=ガン飛ばしの訓練中！%0d%0dhttps://www.gantobashi.com/%0d&hashtags=メンチキッター,ガン飛ばし', '_blank', 'noreferrer');
  }
</script>
